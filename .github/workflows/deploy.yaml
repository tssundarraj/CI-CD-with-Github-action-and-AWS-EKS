name: Deploy to ECR & EKS

on:
  push:
    branches: [ main ]

env:
  ECR_REPOSITORY: docker
  EKS_CLUSTER_NAME: my-cluster
  AWS_REGION: eu-north-1

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        IMAGE_URI=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
        docker build -t $IMAGE_URI -f Dockerfile .
        docker push $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Deploy Manifests to EKS
      run: |
        kubectl apply -f manifests/app.yaml
        kubectl apply -f manifests/service.yaml

    - name: Update Image in Deployment
      run: |
        kubectl set image deployment/kubernetes-demo-hello-app hello-app=$IMAGE_URI --record
        kubectl rollout status deployment/kubernetes-demo-hello-app
